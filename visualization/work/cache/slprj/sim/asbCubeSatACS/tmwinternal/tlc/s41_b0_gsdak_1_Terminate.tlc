%implements s41_b0_gsdak_1_Terminate "C"

%function Terminate(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
localDW->kohckdzmxe = rt_SlioAccessorRelease(1, 1, localDW->kohckdzmxe);
localDW->o0zwdfrkn4 = rt_SlioAccessorRelease(1, 1, localDW->o0zwdfrkn4);
localDW->hunrq3wyal = rt_SlioAccessorRelease(1, 1, localDW->hunrq3wyal);
localDW->kb3srtthe1 = rt_SlioAccessorRelease(1, 1, localDW->kb3srtthe1);
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Terminate", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Terminate"))
%<SLibCG_AccessArg(1, 5, 0)>
%endif
%if SLibCG_ArgAccessed(1, 5, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Terminate", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Terminate"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(1, 5, 0)>
%endif
%endfunction
%function TerminateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void h1ucxuq2iv(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 5, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%endif
%<comma>due31ddxq5 *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 5, fcnProtoType)>
%endfunction
